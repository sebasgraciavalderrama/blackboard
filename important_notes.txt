MY COLLAB PRIVATE ROOM (Don't share this link, its only yours)
https://us.bbcollab.com/collab/ui/session/join/efd729816f28458b98eb1b5eb79ed162

MY COLLAB PRIVATE ROOM (Share this link with your attendees)
https://tinyurl.com/sebasroom

TO USE MAILHOG //email
http://moodle.test:8025/#

COPY KEY FROM HOST TO GUEST
  SSH - update guest keys
  Desde el host
  cp ~/.ssh/id_rsa <donde está el vagrant>
  cp ~/.ssh/known_hosts <donde está el vagrant>
  ​
  Luego desde el guest copia esos archivos a .ssh
  vagrant@vagrant:/vagrant$ cp /vagrant/id_rsa ~/.ssh
  vagrant@vagrant:/vagrant$ cp /vagrant/known_hosts ~/.ssh
  vagrant@vagrant:/vagrant$ chmod 600 ~/.ssh/id_rsa
  vagrant@vagrant:/vagrant$ chmod 600 ~/.ssh/known_hosts

FOR MIN JAVASCRIPT FILES
https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/

<?php

  if ($oldversion < 2018112000) {
        $params = ['topics','folderview','flexpage'];
        $DB->execute('UPDATE {course} SET format = ? WHERE format = ? OR format = ?', $params);
        // Mrooms savepoint reached.
        upgrade_plugin_savepoint(true, 2018111600, 'local', 'mrooms');
    }
    $DB->execute('UPDATE {course_format_options} SET format = ? WHERE format = ? OR format = ?', $params);
    $DB->execute('DELETE FROM{course_format_options} WHERE format = ? OR format = ?', $params);

/*
    EXPECTED BEHAVIOUR:

    The courses with the folowing formats: 'flexpage' and 'folderview' should have 'topics' now instead.
    No other course format should have folderview or flexpage as its value.
    1. Execute the upgrade
    2. You can navigate to master->Admin->Front page settings->Reports-> Admin SQL and run the following query (after executing the upgrade):
    SELECT * FROM mdl_course WHERE format='folderview' OR format='flexpage'
    The output should be: Nothing to display.
    3. Alternatively the following query can be executed and see the query results.
    SELECT * FROM mdl_course WHERE format='topics', no folderview or flexpage values should appear under the format column.
*/

PARA EJECUTAR EL UPGRADE DESDE CONSOLA (CAMBIOS HECHOS SOBRE upgrade.php)
    php admin/cli/upgrade.php

SI EL SERVIDOR DE SELENIUM MUESTRA PROBLEMAS
    behat-servers-start

SUBIR EL BEHAT
    php admin/tool/behat/cli/init.php
EJEMPLOS BEHAT
    vendor/bin/behat --config /srv/moodledata/behat_moodledata/behatrun/behat/behat.yml /vagrant/www/moodle/mod/lti/tests/behat/addtype.feature
    vendor/bin/behat --config /srv/moodledata/behat_moodledata/behatrun/behat/behat.yml /vagrant/www/moodle/theme/snap/tests/behat/title.feature
    vendor/bin/behat --config /srv/moodledata/behat_moodledata/behatrun/behat/behat.yml /vagrant/www/moodle/theme/snap/tests/behat/activity_title_visibility.feature
    vendor/bin/behat --config /srv/moodledata/behat_moodledata/behatrun/behat/behat.yml /vagrant/www/moodle/theme/snap/tests/behat
    vendor/bin/behat --config /srv/moodledata/behat_moodledata/behatrun/behat/behat.yml /vagrant/www/moodle/theme/snap/tests/behat/accessibility_forum_select_labels.feature

    vendor/bin/behat --config /srv/moodledata/behat_moodledata/behatrun/behat/behat.yml /vagrant/www/moodle/theme/snap/tests/behat/coursemodule_page.feature
    vendor/bin/behat --config /srv/moodledata/behat_moodledata/behatrun/behat/behat.yml /vagrant/www/moodle/theme/snap/tests/behat/front_page_module_page.feature
    vendor/bin/behat --config /srv/moodledata/behat_moodledata/behatrun/behat/behat.yml /vagrant/www/moodle/theme/snap/tests/behat/activity_cards_functionality.feature

ERROR WHEN THE WEBSERVICE IS NOT DECLARED CORRECTLY
        Unknown error type: Class 'local_pld\webservice\external_api' not
        found at /vagrant/www/moodle/local/pld/classes/webservice/pld_search_courses.php: 39 (Exception)

XPATH
    And I click on "//a[@file='repo_upload_file']]" "xpath_element"
    //input[@type='file']

PARA QUITAR UN ARCHIVO DEL COMMIT
    git reset HEAD /path/to/file/file.xyz
    git status
    git commit -m "INT-123: Descripcion 123 abc xyz"

PARA SUBIR EL PHPUnit
    php admin/tool/phpunit/cli/init.php
    vendor/bin/phpunit path/to/file
EJEMPLOS PHPUnit
vendor/bin/phpunit report/allylti/tests/launch_config_test.php
vendor/bin/phpunit local/mrooms/tests/plugins_test.php
vendor/bin/phpunit mod/hsuforum/tests/mail_test.php
vendor/bin/phpunit theme/snap/tests/local_test.php
vendor/bin/phpunit local/pld/tests/tokens/tokens_test.php
PARA CORRER LA PRUEBA
    vendor/bin/phpunit path/to/file
    Ejemplo:
      vendor/bin/phpunit local/mrooms/tests/course_test.php
      vendor/bin/phpunit local/mrooms/tests/plugins_test.php

      vendor/bin/phpunit local/pld/tests/model/action_test.php
PARA IMPRIMIR EN REGUS
    regus.tierrafirme@regus.com

PARA HACER EL AMEND
    Agregar los archivos modificados:
      git add path/to/files
    git commit --amend
    (luego se hace el push forzado)
    git push -f origin nombre_branch
    git push -f origin update/INT-15153_hidden-zebra

NOTE: AFTER A REOPEN ALWAYS REMEMBER TO CREATE A NEW BRANCH (kow checkout INT-XXXXX)

git push -f origin feature/INT-13902_superficial-rattlesnake
git push -f origin feature/INT-13698_substantial-newt
git push -f origin origin/update/INT-12776_juvenile-tortoise /** dont add oriing**/
git push -f origin update/INT-14160_acclaimed-cow
git push -f origin update/INT-14118_exhausted-gecko

PARA AGREGAR LOS MODIFICADOS Y NO LOS NUEVOS
    git add . -u

PARA MIRAR EL LOG DEL GIT
    git log

PARA CREAR UNA NUEVA BRANCH Y LUEGO HACER EL KOW PUSH ( EN EL CASO DE QUE NO EXISTA UNA BRANCH e.g: MR 3.5 MP 1 no existe)
    git checkout -b (feature or update)/INT-XXXXX_<NAME-OF-THE-BRANCH>
      git checkout -b update/INT-14022_heuristic-salamander
    kow push -p

PARA HACER EL GIT CHERRY-PICK
    git cherry-pick <commit-hash>
      estos hash de los commits estan en mroomstech dentro del pull request y toca hacerlo del mas viejo al ultimo
        'git show' y luego seleccionar el hash del commit que quiero seleccionar...

PARA REBASE
    git pull origin release/3.5+2 --rebase //OLD
    git pull --rebase origin release/3.6+1
    git push origin feature/INT-14650_lively-zorro -f

    git pull --rebase origin release/3.7+1
    git push origin update/INT-15402_dapper-gorilla -f

    git fetch
git pull --rebase origin master
git push -f origin {el nombre de la rama}

VIDEO YOUTUBE PLD
    https://www.youtube.com/watch?v=YUvfziypPvs

CREATING CUSTOM ROLES
    https://docs.moodle.org/36/en/Creating_custom_roles

ARCHETYPES
    https://docs.moodle.org/dev/Role_archetypes

ACCESS API
    https://docs.moodle.org/dev/Access_API#How_to_define_new_capabilities_in_plugins

PLD VIDEO RESOURCES
    https://www.youtube.com/watch?v=YUvfziypPvs&
    https://www.youtube.com/watch?v=UWjbPQRyJcI

    001 Example: | clean | # /var/www/mrhosts/bamboo6/xml-data/build-dir/DEV-MOOD1176-BEH/local/geniusws/tests/behat/genius_sso.feature:157

    002 Example: | snap  | # /var/www/mrhosts/bamboo6/xml-data/build-dir/DEV-MOOD1176-BEH/local/geniusws/tests/behat/genius_sso.feature:158

vendor/bin/behat --config /srv/moodledata/behat_moodledata/behatrun/behat/behat.yml /vagrant/www/moodle/local/geniusws/tests/behat/genius_sso.feature

git commit -m "INT-12776: Added new steps to behat test and conditional operator"

BACKPORT VIDEO
    https://us.bbcollab.com/recording/40866604289a4ea88ece11bdd7874bc0


HOW TO DISABLE PLUGINS, BLOCKS, ETC
 In the file /www/moodle/config_local.php
 Uncomment the type of component you want to disable;
    If you want to disable a block then uncomment '$_MR_BLOCKS           = mr_all_plugins('blocks');'
 Then add this into a new line: 'unset($_MR_BLOCKS['collect']);'
 Then go to Site administration->Type into the search box 'control panel'->Select 'Control Panel'->And navigate to the type of $_MR_XXXX
 and you should see the component with the label 'Disabled' right next to it
 Purging caches might not be necessary but you could purge them any ways.

DEBUG WHATS INSIDE A VAR
    public static function login_url() {
        global $PAGE;
        fwrite(STDERR, 'PAGE URL set? ' . isset($PAGE->url) . PHP_EOL); //this line prints the error through terminal
        if (!PHPUNIT_TEST && isset($PAGE->url)) {
            fwrite(STDERR, 'PAGE URL: ' . $PAGE->url . PHP_EOL); //this line prints the error through terminal
            $url = $PAGE->url;
        } else {
            $url = null;
        }
        return new \moodle_url('/local/geniusws/login.php', ['referrer' => $url]);
    }

USING $CFG TO DESCRIBE A CONTEXT
    $CFG->dirroot/local/pld/classes/form/formattedcourse.php

IN config_kow.php YOU CAN FIND THE CURRENT DATABASE NAME
    i.e. $CFG->dbname = 'INT12344'

HOW TO GET CONTEXT
    https://docs.moodle.org/dev/Access_API#Context_fetching

HOW TO SAVE YOUR TERMINAL OUTPUT TO A FILE
    script (type this into your terminal and it will start recording)

HOW TO EXTRACT FILES
    Type man tar for more information, but this command should do the trick:

    tar -xvzf community_images.tar.gz
    To explain a little further, tar collected all the files into one package, community_images.tar. The gzip program applied compression, hence the gz extension. So the command does a couple things:

    f: this must be the last flag of the command, and the tar file must be immediately after. It tells tar the name and path of the compressed file.
    z: tells tar to decompress the archive using gzip
    x: tar can collect files or extract them. x does the latter.
    v: makes tar talk a lot. Verbose output shows you all the files being extracted.

HOW TO CHANGE THE EXTENSION OF A FILE
    mv your_file.extension your_file.new.extension

HOW TO MOVE FILES TO ANOTHER FOLDER
    mv your_file.extension new/path/

STACK TRACE OF BEHAT ERROR WHEN THE PLD WEBSERVICE IS NOT CALLED CORRECTLY
    Error code: generalexceptionmessage
    * line 228 of /local/pld/classes/webservice/pld_search_courses.php: Error thrown
    * line 101 of /local/pld/classes/webservice/pld_search_courses.php: call to local_pld\webservice\pld_search_courses::search_courses()
    * line 228 of /lib/externallib.php: call to local_pld\webservice\pld_search_courses::local_pld_search_courses()
    * line 59 of /lib/ajax/service.php: call to external_api::call_external_function()


SET GOALS - BLACKBOARD
    https://onblackboard.sharepoint.com/sites/HR/PerformanceManagement/Pages/Goals-Management-for-Employees.aspx

#----------------GUYS ALLY LOGGER PR - Psr logger #19------------------------#

kow accept https://github.com/blackboard-open-source/moodle-filter_ally/pull/12 filter/ally

vendor/bin/phpunit --colors "local_geniusws_server_service_test" local/geniusws/tests/server/service_test.php

HOW TO PRINT SOMETHING TO A TXT FILE (This file will be stored in the location of the file where this code is injected)
  file_put_contents(“MyLog.txt”, print_r(array(
                  ‘first_val’ => $prueba,
                  ‘second_val’ => $timetotrigger
              ), true), FILE_APPEND);

commit c5d1a1108943df8cb0186cef975b1e273667edd8 (origin/update/INT-14160_dreary-magpie, update/INT-14160_dreary-magpie)
Author: Sebastian Gracia <sebastian.graciavalderrama@blackboard.com>
Date:   Thu Feb 21 12:28:50 2019 -0500

    INT-14160: Array context deleted

commit 1a624bed15d824774bbc8f7aedd24ae44fddeb35 (origin/update/INT-14160_acclaimed-cow, update/INT-14160_acclaimed-cow)
Author: Sebastian Gracia <sebastian.graciavalderrama@blackboard.com>
Date:   Fri Feb 15 15:49:04 2019 -0500

    INT-14160: Node module deleted

kow accept https://github.com/blackboard-open-source/moodle-tool_ally/pull/23 admin/tool/ally
#----------------------------------------------------------------------------#

HOW TO GRUNT FILES
    Desde '/Users/sebastiangracia/vagrant/www/moodle' ejecutar este comando:
        grunt uglify:amd --force

HOW TO DELETE MODIFIED FILES FROM git status (i.e. When you execute a grunt command from moodle and it creates 400+ min.js files)
    git reset --hard *DO THIS AFTER ADDING (git add path/to/file.myfile) THE FILES YOU WANT TO COMMIT*

EXECUTE CRON FROM WEB
moodle.test/admin/cron.php

STOP RECORDINGS ON MAC
    COMMAND + CONTROL + ESC

INT-14273 - SI 04090783
    SELECT c.*
    FROM {course_modules} cm
    JOIN {course} c O4N c.id = cm.course
    WHERE cm.id = ?
    [array (0 => 401,)]

HOW TO PRINT THE VALUE OF A VARIABLE
    var_dump($MyVariable);

TO WRITE IN A FILE FROM code
file_put_contents("Log_sebas_".date("Ymd", time()) . ".txt", print_r(array(
          'sql' => $sql,
          'params' => $filterparams,
          'filtersql' => $filtersql
      ), true), FILE_APPEND);

INT-14215

    Scenario 1
        Set up two pages with manual activity completion. Created PLD rule on activity completion of first page to display alert and PLD on activity completion of second page to redirect to an assignment.

        Results testing in Snap: PLD history shows rule trigger upon manually marking page complete. Alert displayed only after reloading course. Redirect to assignment never happened, even after reload.
        Results testing in Boost: Same behavior as Snap.

    Scenario 2:
        Set up two pages with activity completion upon viewing page. Created PLD rule on activity completion of first page to display alert and PLD on activity completion of second page to redirect to an assignment.

        Results testing in Boost: Alert displayed immediately upon opening page. Redirect also occurred upon opening page preventing opportunity to read page, could be mitigated with a delay on action.
        Results testing in Snap: Clicking "Read more" button marks page complete and PLD history indicates rule triggered. However, alert only displayed upon reloading course. Redirect to assignment also only worked upon reloading the course.

    Scenario 3:
        Set up two assignments with manual completion. Created PLD rule on activity completion of first assignment to display alert and PLD on activity completion of second assignment to redirect to a quiz.

        Results testing in Snap: PLD history shows rules triggered upon manually marking assignments complete. Alert displayed only after reloading course. Redirect to assignment never happened, even after reload.
        Results testing in Boost: PLD history shows rules triggered upon manually marking assignments complete. However, alert only displayed upon reloading course. Redirect to assignment also only worked upon reloading the course.


        Courses / Year3 / Semester2 / Math103Y3S2 / Math 103: Intermediate Algebra

#-----------HACKATHON-----------#

Stories
1. AVISO DE CAMBIO DE COLOR INVALIDO Y LINK CON MAS INFORMACION, NO OBLIGARLO SOLO WARNING. (SOY UN ADMIN, CAMBIO EL COLOR DEL SITIO, GUARDO CAMBIOS Y ME SALE EL WARNING....)
2. PRUEBAS UNITARIAS.
3. AL CARGAR UNA IMAGEN, CARGARLA EN MEMORIA Y HACER EL HISTOGRAMA Y HACER LOS CALCULOS
    3.1 CONTRASTE CON LAS IMAGENES: HISTOGRAMA -> EL MAYOR/MENOR NUMERO SE COMPARA
        IDENTIFICAR LA 3RA PARTE/30% IZQ SUPERIOR Y COMPRAR EL CONTRASTE Y DECIR UN WARNING
4. DEBAJO DEL COLOR DECIR: ESTE COLOR NO CUMPLE CON LOS CONTRASTES REQUERIDOS.....
    EN SNAP->NAVIGATION COLOR
             COVER DISPLAY

RESEARCH
CHANGE RGB TO PALETTE FOR COLOR BLINDESS

SITE COLOR - BOTONES, TEXTO, LINKS, ICONOS (FG)
NAV BAR BK
NAV BAR FG
BUT NAV BAR BK
BUT NAV BAR FG
CATEGORY COLOR (FG) vs NAV BAR

PENSAR TODAS LAS POSIBLES COMBINACIONES DE LOS COMPONENTES:
1. SITE COLOR Vs. BLANCO (#FFFF)
2. NAV BAR BK Vs. NAV BAR FG
3. BUT NAV BAR BK Vs. BUT NAV BAR FG
5. SITE COLOR Vs. BLANCO (DEFAULT) / y otras mas..
6. CATEGORY COLOR Vs. POR DEFECTO SE COMPARA CON BLANCO SI LOS DE ABAJO NO ESTAN ACTIVADOS:
                        6.1 NAV BAR BK
                        6.2 BUT NAV BK

#RGB
#F00 (RED)
#EF0000 (OTRO ROJO)

INT-14312
    /admin/tool/log/store/legacy/classes/log/store.php
        class store...
            public function __construct...
            public function get_events_select...
            public function get_events_select_count...
            public function dispose...
            public function get_events_select_iterator
            public function get_log_event
            public function is_logging


    mod/customer/classes/certificate.php
    mod/certificate/locallib.php
    /admin/tool/log/store/legacy/classes/log/store_test.php
    report/stats/lib.php *CORE*
    block/progress/lib.php
    block/conncampus/block_conncampus.php

Hello, based on https://tracker.moodle.org/browse/MDL-45104 and the soon to be deprecated methods
mentioned in admin/tool/log/store/legacy/classes/log/store.php, none of our plugins uses legacy log store as a direct extension or implementation
of the class legacy log store that will be fully deprecated, based on this no switch was made on our plugins therefor no PR will be submitted.
The only findings about the usage of the legacy log store are validations of instances of the class in different components of the
 site (i.e instanceof expressions).


INT-14244
In local/pld/model/action.php

/** NEW METHOD
  * Validates if a user is suspended and exclude the user from the reciepent list
  *
  * @param array $recipients
  * @param event $event
  * @return array $reciepents
  */
 private function get_active_users($recipient, $courseid){
     global $DB;
     $sql = "SELECT userid FROM {user_enrolments} ue
         JOIN {enrol} en on en.id = ue.enrolid
         WHERE ue.status = 1
         AND en.courseid = " . $courseid;

     $suspended_users = $DB->get_records_sql($sql);

     foreach ($recipient as $llave => $user) {
         foreach ($suspended_users as $key => $object) {
             if (strcmp($user->id, $object->userid) == 0) {
                 unset($recipient[$llave]);
             }
         }
     }
     return $recipient;
 }

 In method
 private function resolve_recipients($recipients, $event){
        $resolved = array();

        foreach($recipients as $recipient) {
            foreach($this->resolve_recipient($recipient, $event) as $user){
                $resolved[] = $user;
            }
                foreach($this->resolve_recipient($recipient, $event) as $user){
                        $resolved[] = $user;
                }
        }

        $resolved=$this->get_active_users($resolved, $event->courseid); //THIS LINE CLEANS RECIEPENTS THAT ARE SUSPENDED
        return $resolved;
    }

php admin/tool/task/cli/schedule_task.php --execute="\mod_attendance\task\cron_task"
\assignfeedback_editpdf\task\convert_submissions
php mod/assign/feedback/editpdf/classes/task/convert_submissions.php --execute=


INT-14329
  $CFG->messagingallusers
  \core_message\api::MESSAGE_PRIVACY_SITE
  php admin/tool/task/cli/schedule_task.php --execute="\mod_attendance\task\cron_task"
  php admin/tool/task/cli/schedule_task.php --execute="\mod_attendance\task\auto_mark"
  php lib/classes/task/messaging_cleanup_task.php --execute=""
  SELECT table_name AS `Table`, round(((data_length + index_length) / 1024 / 1024), 2) `Size in MB` FROM information_schema.TABLES WHERE table_schema = "moodleorg" AND table_name = "notifications";

INT-14513 (Community Bulk upgrade 5)
  In order to execute community bulk upgrades:
  1. create a new branch (kow checkout INT-XXYYZZ)
  2. Identify which pugins are due to be updated: i.e. "Update mod_turnitintooltwo with latest version https://moodle.org/plugins/mod_turnitintooltwo"
  3. create the command with the plugins due to be updated: i.e. "kow plugins-db mod_turnitintooltwo block_xxxx ..."
  4. Follow the appropiate:
    4.1 If you have to fix conflicts remember to commit those changes right after you fix them: i.e. "git commit -m "INT-XXYYZZ: your description..." "
    4.2 Type 'yes' in the terminal to continue...
  5. After all changes/conflicts/updates are done, type 'git status' and you should see how many commits you have just made: i.e. 3 plugins updated = 3 commits.
  CHANGES MADE IN MOODLE/PLAGIARISM/TURNITIN/DB/UPGRADE.PHP


  vendor/bin/behat --config /srv/moodledata/behat_moodledata/behatrun/behat/behat.yml /vagrant/www/moodle/plagiarism/turnitin/tests/behat/eula.feature

INT-14422
###############################################!! role_assignments !!#############################################################
  $DB->delete_records('role_assignments' //ONLY IN CORE
  $DB->insert_record('role_assignments'  // in local/ccuser_ie/classes/task/import_photo_assessment_task.php
                                                                           /import_student_orientation_task.php
  $DB->update_record('role_assignments'  // in auth/joomdle/auth.php
###############################################!! user_enrolments !!#############################################################
  $DB->insert_record('user_enrolments'    // in local/ccuser_ie/classes/task/import_photo_assessment_task.php
                                                                           /import_student_orientation_task.php
  $DB->update_record('user_enrolments'   // in local/ccuser_ie/classes/task/import_photo_assessment_task.php
                                                                           /import_student_orientation_task.php
  $DB->delete_records('user_enrolments', // ONY IN CORE

INT-14556
  https://github.com/middlebury/moodle-mod_adaptivequiz/issues/58

INT-14368

           * Get the list of users within a specific context.
           *
           * @param userlist $userlist The userlist containing the list of users who have data in this context/plugin combination.
           */
          public static function get_users_in_context(userlist $userlist)
          {
              $context = $userlist->get_context();

              if (!is_a($context, \context_course::class)) {
                  return;
              }

              $params = [
                  'courseid' => $context->instanceid,
              ];
              $params2 = [
                  'instanceid' => $context->instanceid,
              ];
              $params3 = [
                  'instanceid' => $context->instanceid,
              ];

              $sql = "SELECT coursexuser.userid as userid
              FROM {modxuserblock_collect_coursexuser} coursexuser
              WHERE coursexuser.cmid = :cmid";

              $userlist->add_from_sql('userid', $sql, $params);

              $sql2 = "SELECT modxuser.userid as userid
              FROM {block_collect_modxuser} modxuser
              WHERE modxuser.courseid = :cmid";

              $userlist->add_from_sql('userid', $sql2, $params2);

              $sql3 = "SELECT scormtrack.userid as userid
              FROM {block_collect_scormtrack} scormtrack
              WHERE scormtrack.courseid = :cmid";

              $userlist->add_from_sql('userid', $sql3, $params3);
          }

          /**
           * Delete multiple users within a single context.
           *
           * @param approved_userlist $userlist The approved context and user information to delete information for.
           */
          public static function delete_data_for_users(approved_userlist $userlist)
          {
              global $DB;

              $context = $userlist->get_context();
              if (!($context instanceof \context_course)) {
                  return;
              }

              list($userinsql, $userinparams) = $DB->get_in_or_equal($userlist->get_userids(), SQL_PARAMS_NAMED);
              $sql = "userid $userinsql AND courseid = :courseid";
              $params = array_merge($userinparams, ['courseid' => $context->instanceid]);

              $sql2 = "userid $userinsql AND courseid = :courseid";
              $params2 = array_merge($userinparams, ['cmid' => $context->instanceid]);

              $sql3 = "userid $userinsql AND courseid = :courseid";
              $params3 = array_merge($userinparams, ['scormid' => $context->instanceid]);


              $DB->delete_records_select('block_collect_modxuser', $sql, $params);
              $DB->delete_records_select('block_collect_coursexuser', $sql2, $params2);
              $DB->delete_records_select('block_collect_scormtrack', $sql3, $params3);
          }
      }

      $userlist->add_from_sql('userid', $sql2, $params2);

      $sql3 = "SELECT scormtrack.userid as userid
              FROM {block_collect_scormtrack} scormtrack
              WHERE scormtrack.courseid = :cmid";

      $userlist->add_from_sql('userid', $sql3, $params3);
  }

  /**
   * Delete multiple users within a single context.
   *
   * @param approved_userlist $userlist The approved context and user information to delete information for.
   */
  public static function delete_data_for_users(approved_userlist $userlist) {
      global $DB;

      $context = $userlist->get_context();
      if (!($context instanceof \context_course)){
          return;
      }

      list($userinsql, $userinparams) = $DB->get_in_or_equal($userlist->get_userids(), SQL_PARAMS_NAMED);
      $sql = "userid $userinsql AND courseid = :courseid";
      $params = array_merge($userinparams, ['courseid' => $context->instanceid]);

      $sql2 = "userid $userinsql AND courseid = :courseid";
      $params2 = array_merge($userinparams, ['cmid' => $context->instanceid]);

      $sql3 = "userid $userinsql AND courseid = :courseid";
      $params3 = array_merge($userinparams, ['scormid' => $context->instanceid]);


      $DB->delete_records_select('block_collect_modxuser', $sql, $params);
      $DB->delete_records_select('block_collect_coursexuser',$sql2, $params2);
      $DB->delete_records_select('block_collect_scormtrack',$sql3, $params3);
  }
}

Argument 1 passed to block_collect\privacy\provider::delete_data_for_users() must be an instance of block_collect\privacy\approved_userlist, instance of core_privacy\local\request\approved_userlist given,
called in /vagrant/www/moodle/blocks/collect/tests/privacy_provider_test.php on line 363

13/40/86/68/00

vendor/bin/phpunit /blocks/intelligent_learning/tests/privacy_provider_test.php
vendor/bin/phpunit /blocks/intelligent_learning/tests/privacy_provider_test.php

  INT-14561
  THIS METHOD DISPLAYS A ERROR WHEN SAVING A 'SPECIFIC DATE AND TIME' EVENT WHEN THE DATE IS IN THE PAST

  public function get_display_text() {
          $timetotrigger = $this->calculate_next_timetotrigger(time());

          if (is_null($timetotrigger)) {
              $a = html_writer::tag('span', get_string('trigger_time_past', 'local_pld'), array('class' => 'error'));
          } else if (!local_pld_check_collector_depdendencies()) {
              $a = html_writer::tag('span', get_string('trigger_time_collect_disabled', 'local_pld'), array('class' => 'error'));
          } else {
              $a = core_text::strtoupper(userdate($timetotrigger, get_string('trigger_time_format', 'local_pld')));
          }
          return get_string('trigger_time_x', 'local_pld', $a);
      }

  $a = html_writer::tag('span', get_string('trigger_time_past', 'local_pld'), array('class' => 'error'));

  a:8:{s:4:"type";s:5:"daily";s:4:"days";a:1:{i:0;s:1:"1";}s:11:"dayinterval";i:5;s:4:"hour";s:1:"8";s:6:"minute";s:2:"30";s:9:"timestart";a:3:{s:3:"day";s:2:"10";s:5:"month";s:1:"9";s:4:"year";s:4:"2013";}s:7:"timeend";a:3:{s:3:"day";s:2:"26";s:5:"month";s:1:"6";s:4:"year";s:4:"2019";}s:8:"timezone";s:2:"99";}
  a:8:{s:4:"type";s:5:"daily";s:4:"days";a:1:{i:0;s:1:"1";}s:11:"dayinterval";i:3;s:4:"hour";s:1:"8";s:6:"minute";s:2:"30";s:9:"timestart";a:3:{s:3:"day";s:2:"10";s:5:"month";s:1:"9";s:4:"year";s:4:"2013";}s:7:"timeend";a:3:{s:3:"day";s:2:"26";s:5:"month";s:1:"6";s:4:"year";s:4:"2019";}s:8:"timezone";s:2:"99";}

  echo html_writer::label(get_string('entermessage', 'chat'), 'input_chat_message', false, array('class' => 'accesshide'));


  a:3:{
  s:6:"timing";s:6:"before";
  s:4:"days";
  a:4:{s:5:"_yuid";s:30:"yui_3_17_2_1_1559049532891_426";s:5:"_node";a:1:{s:5:"_yuid";s:30:"yui_3_17_2_1_1559049532891_426";}s:11:"_stateProxy";a:1:{s:5:"_yuid";s:30:"yui_3_17_2_1_1559049532891_426";}s:8:"_plugins";a:0:{}}
  s:15:"coursestartdate";N;}


  First test: Actual mm/dd/YYYY 05/19/2019, Expected mm/dd/YYYY 05/18/2019

  Second test: Actual mm/dd/YYYY 05/19/2019, Expected mm/dd/YYYY 05/17/2019

  GMT: Wednesday, April 10, 2019 4:00:00 PM
  Your time zone: Wednesday, April 10, 2019 11:00:00 AM GMT-05:00
  Relative: 2 months ago

  GMT: Sunday, March 31, 2019 4:00:00 PM
  Your time zone: Sunday, March 31, 2019 11:00:00 AM GMT-05:00
  Relative: 2 months ago

  ###########################################################################################################################################################

  public function calculate_next_timetotrigger($now)
  {
      // Since the method is the same for both tests and the actual config of the event, PHP Unit test validation is needed.
      if (PHPUNIT_TEST) {
          $coursestartdate = $now;
      } else {
          $coursestartdate = $this->coursestartdate;
      }
      // Set of all the variables needed.
      $timetotrigger = null;
      $enddate = $this->courseenddate;
      $days = $this->days;
      $date = new DateTime();
      $date->setTimestamp($coursestartdate);

      // Validate if timing is before of after.
      if ($this->timing == self::TYPE_BEFORE) {
          // Take or add days to the course start date
          $date->sub(new DateInterval('P' . $days . 'D'));
          $timetotrigger = $date->getTimestamp();
      } else if ($this->timing == self::TYPE_AFTER) {
          $date->add(new DateInterval('P' . $days . 'D'));
          $timetotrigger = $date->getTimestamp();
          // Validate that course end date is younger than $newdate and course end date is equal to 0.
          if ($enddate < $timetotrigger && $enddate != 0) {
              // If course end date is younger than $timetotrigger wi will assign the course end date, this could change.
              $timetotrigger = $enddate;
          }
      }
      return $timetotrigger;
  }

###########################################################################################################################################################

  public function test_course_start_date_after_course_end_date() {
    $trigger = new local_pld_trigger_course_start_date(0);
    $trigger->set_timing(local_pld_trigger_course_start_date::TYPE_AFTER);
    $trigger->set_days(10);

    $trigger->set_courseenddate(strtotime("04/08/2019"));

    $actual = $trigger->calculate_next_timetotrigger(strtotime("04/01/2019"));
    $expected = strtotime("04/08/2019");

    $this->assertEquals($expected, $actual);
}

###########################################################################################################################################################

public function get_display_text()
    {
        // Set of all variables needed.
        $enddate = $this->courseenddate;
        $startdate = $this->coursestartdate;
        $days = $this->days;
        $a = null;
        $timing = $this->timing;

        $date = new DateTime();
        $date->setTimestamp($startdate);

        $date->add(new DateInterval('P' . strval($days) . 'D'));
        $timetotrigger = $date->getTimestamp();

        // Validate that the timing is 'after', course end date is no younger than $timtotrigger and days is between 0 and 365.
        if ($enddate < $timetotrigger && $timing == local_pld_trigger_course_start_date::TYPE_AFTER && $enddate != 0) {
            $a = html_writer::tag('span', get_string('trigger_course_start_date_err', 'local_pld'), array('class' => 'error'));
            return get_string('trigger_course_start_date_description', 'local_pld', $a);
        }
        if ($days < 0 || $days > 365) {
            $a = html_writer::tag('span', get_string('trigger_course_start_date_err', 'local_pld'), array('class' => 'error'));
            return get_string('trigger_course_start_date_description', 'local_pld', $a);
        }

        $a = 'Event set for ' . $this->days . ' days ' . $this->timing . ' the course start date.';

        return get_string('trigger_course_start_date_description', 'local_pld', $a);
    }

Hey QA team!

New validations added to the new PLD event: Course Start date.

Please add a new Course start date event in PLD creation page and test its behavior.

Please reach out to me if you have any questions or concerns.

Changelog:
1. New test that validates if the time to trigger is older than the course start date.
2. New validation when adding a number lower that 0 or higher than 365 to the day input box.
3. Modifications added to the calculation of the next time to trigger timestamp.4
4. New addition to the style.css file. Days input box is now fixed with a width of 3em.

Note: Hours are not being taking into account, just days.

2019050101
2019012401

vendor/bin/phpunit local/pld/tests/model/trigger_test.php

FOR THE FIX OF THE INPUT BOX
https://jsfiddle.net/emkey08/zgvtjc51
https://stackoverflow.com/questions/469357/html-text-input-allow-only-numeric-input

moodle/category:viewhiddencategories
tool/ally:viewlogs

Plagiarism: Turnitin plagiarism_turnitin 3.1+ (2019060601)
Blocks: Turnitin block_turnitin 2.7+ (2018121801)

plagiarism_turnitin-2-2019050201
block_turnitin-1-2018121801
kow plugins-db plagiarism_turnitin block_turnitin

default no se envia
ENVIAR EMAIL A USR check se envia

INT-14504 Implement hackthon snap color contrast checker

git pull origin release/3.6+2 --rebase

MutationObserver

https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver
https://javascript.info/mutation-observer
https://www.smashingmagazine.com/2019/04/mutationobserver-api-guide/
https://davidwalsh.name/mutationobserver-api
https://medium.com/@abbeal/listening-to-the-dom-changes-with-mutationobserver-b53a068a58d2
https://codeburst.io/observe-changes-in-dom-using-mutationobserver-9c2705222751

PHP: Testing legacy applications
PHP: Object oriented programming

KOW LANG
  1. Donwload the .zip including the translations
  2. Extract the .zip file inside or outside /vagrant (You can copy the file and paste it in /vagrant/www/moodle and extract it there)
  3. Go to vagrant session and type the following command: 'kow lang /path/to/folder/ INT-XXXXX'
  4. Follow the prompt messages and make sure to copy the output of the translations in a separate file for each language.
  5. 'git status' just to make sure everything looks fine.
  5. 'kow push -p'


KOW BACKPORT EXAMPLE
kow backport MDL-66257 MDL-66598 MDL-66228 MDL-66377 MDL-66161

Commits that will be cherry picked into your current branch:
 * [167a8dc2760893795529ae8de9402ed0cf068f10] MDL-66228 mod_lesson: ensure return URL parameters are always local. by Paul Holden <paulh@moodle.com>
 * [c7a5fc2f35f25b6cfe1275510b2ee140bf226341] MDL-66377 user: Only allow active users to retrieve files via tokenpluginfile.php by Juan Leyva <juanleyvadelgado@gmail.com>
 * [1137b7d072e42ebb9d7dba1ea2d63f5304bd0298] MDL-66161 output: Escaping fatal error message and URL strings by Michael Hawkins <michaelh@moodle.com>
 * [fd753889a23aad921105143b8d5704009ae41f40] MDL-66598 tool_oauth2: Make account confirmation required by default by Jun Pataleta <jun@moodle.com>
 * [78d51b1fc6a875ead0a4563316ae5808db8395f7] MDL-66598 auth_oauth2: Add warning messages in confirm emails by Jun Pataleta <jun@moodle.com>
 * [116d8541d2be3a4f9109d63ba671a690637f9eb2] MDL-66598 auth_oauth2: OAuth2 upgrade step by Jun Pataleta <jun@moodle.com>
 * [4d10388df27f03833e23183d325642156ffc21da] MDL-66257 tool_cohortroles: Unassign the role on removal cohortroles. by cescobedo <carlos.escobedo@gmail.com>
 * [abd981c6a77c7e7359a1f224a6a96167809c2ca0] MDL-66257 tool_cohortroles: unit test for users in multiple cohorts by Jake Dallimore <jake@moodle.com>

 Do you want to continue? (yes/no) [yes]:
 >

Cherry picking: 167a8dc2760893795529ae8de9402ed0cf068f10
Cherry picking: c7a5fc2f35f25b6cfe1275510b2ee140bf226341
Cherry picking: 1137b7d072e42ebb9d7dba1ea2d63f5304bd0298
Cherry picking: fd753889a23aad921105143b8d5704009ae41f40
Cherry picking: 78d51b1fc6a875ead0a4563316ae5808db8395f7
Cherry picking: 116d8541d2be3a4f9109d63ba671a690637f9eb2
Cherry picking: 4d10388df27f03833e23183d325642156ffc21da
Cherry picking: abd981c6a77c7e7359a1f224a6a96167809c2ca0
